import { useState } from 'react'
import { useConversation } from '@elevenlabs/react'
import userPhoto from './assets/user-photo.jpg'
import './App.css'

function App() {
  const [agentId, setAgentId] = useState('')
  const [isConfigured, setIsConfigured] = useState(false)
  const [errorMessage, setErrorMessage] = useState('')
  const conversation = useConversation()

  const handleStart = async () => {
    if (!agentId.trim()) {
      setErrorMessage('рдХреГрдкрдпрд╛ рдкрд╣рд▓реЗ Agent ID рдбрд╛рд▓реЗрдВ!')
      return
    }
    
    setErrorMessage('')
    try {
      await conversation.startSession({
        agentId: agentId.trim(),
      })
    } catch (error) {
      console.error('Error starting conversation:', error)
      setErrorMessage('Conversation рд╢реБрд░реВ рдХрд░рдиреЗ рдореЗрдВ рд╕рдорд╕реНрдпрд╛ рдЖрдИред рдХреГрдкрдпрд╛ API key рдФрд░ Agent ID check рдХрд░реЗрдВред')
    }
  }

  const handleStop = async () => {
    await conversation.endSession()
  }

  const isConnected = conversation.status === 'connected'
  const isSpeaking = conversation.isSpeaking

  if (!isConfigured) {
    return (
      <div className="setup-container">
        <h1>ЁЯдЦ AI Companion Setup</h1>
        <p className="setup-info">
          рдЕрдкрдиреЗ ElevenLabs Agent ID рдХреЛ рдбрд╛рд▓реЗрдВ:
        </p>
        <div className="setup-form">
          <input
            type="text"
            placeholder="Agent ID рдпрд╣рд╛рдБ рдбрд╛рд▓реЗрдВ..."
            value={agentId}
            onChange={(e) => setAgentId(e.target.value)}
            className="agent-input"
          />
          <button 
            onClick={() => agentId.trim() && setIsConfigured(true)}
            className="setup-button"
          >
            рдЬрд╛рд░реА рд░рдЦреЗрдВ
          </button>
        </div>
        <div className="setup-instructions">
          <h3>ЁЯУЛ Setup Instructions:</h3>
          <ol>
            <li>ElevenLabs рдкрд░ рдЬрд╛рдПрдВ рдФрд░ account рдмрдирд╛рдПрдВ</li>
            <li>Conversational AI section рдореЗрдВ рдирдпрд╛ agent рдмрдирд╛рдПрдВ</li>
            <li>Agent ID copy рдХрд░реЗрдВ рдФрд░ рдпрд╣рд╛рдБ paste рдХрд░реЗрдВ</li>
            <li>Environment рдореЗрдВ ELEVENLABS_API_KEY add рдХрд░реЗрдВ</li>
          </ol>
        </div>
      </div>
    )
  }

  return (
    <div className="app-container">
      <h1 className="title">ЁЯдЦ AI Companion</h1>
      
      <div className={`avatar-container ${isSpeaking ? 'speaking' : ''} ${isConnected ? 'active' : ''}`}>
        <div className="avatar-frame">
          <img src={userPhoto} alt="AI Companion" className="avatar-image" />
          {isSpeaking && (
            <div className="pulse-rings">
              <div className="pulse-ring"></div>
              <div className="pulse-ring"></div>
              <div className="pulse-ring"></div>
            </div>
          )}
        </div>
      </div>

      <div className="status-container">
        <div className={`status-indicator ${isConnected ? 'connected' : 'disconnected'}`}>
          {isConnected ? 'ЁЯЯв Connected' : 'ЁЯФ┤ Disconnected'}
        </div>
        {isSpeaking && <div className="speaking-indicator">ЁЯОЩя╕П рдмреЛрд▓ рд░рд╣рд╛ рд╣реИ...</div>}
      </div>

      {errorMessage && (
        <div className="error-message">
          тЪая╕П {errorMessage}
        </div>
      )}

      <div className="controls">
        {!isConnected ? (
          <button onClick={handleStart} className="control-button start-button">
            ЁЯОд рдмрд╛рдд рд╢реБрд░реВ рдХрд░реЗрдВ
          </button>
        ) : (
          <button onClick={handleStop} className="control-button stop-button">
            тП╣я╕П рдмрд╛рдд рдмрдВрдж рдХрд░реЗрдВ
          </button>
        )}
      </div>

      <div className="info-box">
        <p>ЁЯТб <strong>рдХреИрд╕реЗ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ:</strong></p>
        <ul>
          <li>рдмрд╛рдд рд╢реБрд░реВ рдХрд░рдиреЗ рдХреЗ рд▓рд┐рдП рдорд╛рдЗрдХ button рджрдмрд╛рдПрдВ</li>
          <li>AI рд╕реЗ рдмрд╛рдд рдХрд░реЗрдВ рдЬреИрд╕реЗ рдХрд┐рд╕реА рджреЛрд╕реНрдд рд╕реЗ рдмрд╛рдд рдХрд░рддреЗ рд╣реИрдВ</li>
          <li>AI рдЖрдкрдХреА рдмрд╛рдд рд╕реБрдиреЗрдЧрд╛ рдФрд░ рдЬрд╡рд╛рдм рджреЗрдЧрд╛</li>
        </ul>
      </div>
    </div>
  )
}

export default App
